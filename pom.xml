<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.cloudslang</groupId>
    <artifactId>cloudslang-webapp</artifactId>
    <version>2.0.0</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.4</version>
    </parent>

    <properties>
        <jackson.version>2.10.3</jackson.version>
        <cloudslang-score.version>0.3.235</cloudslang-score.version>
        <cloudslang.version>2.0.5</cloudslang.version>
        <spring.version>5.3.4</spring.version>
        <spring-boot.version>2.4.4</spring-boot.version>
        <spring-security.version>5.4.5</spring-security.version>
        <hibernate.version>5.4.24.Final</hibernate.version>
        <plugins.maven-dependency-plugin.version>3.0.2</plugins.maven-dependency-plugin.version>
    </properties>


    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>log4j-over-slf4j</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-to-slf4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jul-to-slf4j</artifactId>
                </exclusion>

            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <scope>runtime</scope>
            <version>2.13.3</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <dependency>
            <groupId>io.cloudslang.lang</groupId>
            <artifactId>cloudslang-all</artifactId>
            <version>${cloudslang.version}</version>
        </dependency>

        <dependency>
            <groupId>io.cloudslang.lang</groupId>
            <artifactId>cloudslang-cli</artifactId>
            <version>${cloudslang.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.mattbertolini</groupId>
                    <artifactId>liquibase-slf4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>io.cloudslang</groupId>
            <artifactId>score-all</artifactId>
            <version>${cloudslang-score.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.199</version>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
            <version>1.9.6</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>

        <dependency>
            <groupId>io.cloudslang</groupId>
            <artifactId>score-api</artifactId>
            <version>${cloudslang-score.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <dependency>
            <groupId>io.cloudslang.lang</groupId>
            <artifactId>cloudslang-compiler</artifactId>
            <version>${cloudslang.version}</version>
        </dependency>

        <dependency>
            <groupId>io.cloudslang.lang</groupId>
            <artifactId>cloudslang-entities</artifactId>
            <version>${cloudslang.version}</version>
        </dependency>

        <dependency>
            <groupId>io.cloudslang.lang</groupId>
            <artifactId>cloudslang-api-commons</artifactId>
            <version>${cloudslang.version}</version>
        </dependency>

        <dependency>
            <groupId>io.cloudslang</groupId>
            <artifactId>score-data-api</artifactId>
            <version>${cloudslang-score.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
            <version>9.0.44</version>
        </dependency>

        <!-- test artifacts -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>

       <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring-security.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring-security.version}</version>
        </dependency>

       <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>

        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.7.0</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                       
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!--License checker for build-->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <failIfMissing>false</failIfMissing>
                    <header>${project.basedir}/license.template</header>
                    <headerDefinitions>
                        <headerDefinition>${project.basedir}/header-definitions.xml</headerDefinition>
                    </headerDefinitions>
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                    <!--Pass arguments using ${var} syntax in license.template file-->
                    <properties>
                        <copyright.year>2016</copyright.year>
                    </properties>
                    <!--Custom mapping for java extensions-->
                    <useDefaultMapping>false</useDefaultMapping>
                    <mapping>
                        <java>cloudslang-java-header</java>
                    </mapping>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${plugins.maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.maven</groupId>
                                    <artifactId>apache-maven</artifactId>
                                    <classifier>bin</classifier>
                                    <type>zip</type>
                                    <version>3.3.9</version>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.basedir}/target/maven</outputDirectory>
                                    <destFileName>maven</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>analyze dependencies</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>true</failOnWarning>
                            <ignoredUsedUndeclaredDependencies>
                                <ignoredUsedUndeclaredDependency>org.hibernate.javax.persistence:hibernate-jpa-2.1-api:jar:1.0.0.Final</ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>jakarta.annotation:jakarta.annotation-api:jar:1.3.5</ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>io.cloudslang.lang:cloudslang-runtime:jar:${cloudslang.version}</ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>javax.persistence:javax.persistence-api:jar:2.2</ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>org.apache.commons:commons-lang3:jar:3.11</ignoredUsedUndeclaredDependency>
                            </ignoredUsedUndeclaredDependencies>
                            <ignoredUnusedDeclaredDependencies>
                                <ignoredUnusedDeclaredDependency>org.springframework.boot:spring-boot-starter-web:jar:${spring-boot.version}</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.springframework.boot:spring-boot-starter-security:jar:${spring-boot.version}</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.hibernate:hibernate-core:jar:${hibernate.version}</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.hibernate:hibernate-entitymanager:jar:${hibernate.version}</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>io.cloudslang:score-all:jar:${cloudslang-score.version}</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.apache.tomcat.embed:tomcat-embed-core:jar:9.0.44</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>javax.xml.bind:jaxb-api:jar:2.3.0</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>com.h2database:h2:jar:1.4.199</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.aspectj:aspectjtools:jar:1.9.6</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.apache.logging.log4j:log4j-api:jar:2.13.3</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.apache.logging.log4j:log4j-core:jar:2.13.3</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.apache.logging.log4j:log4j-slf4j-impl:jar:2.13.3</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.springframework.security:spring-security-config:jar:5.4.5</ignoredUnusedDeclaredDependency>
                            </ignoredUnusedDeclaredDependencies>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>copy-maven-conf</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/target/maven/conf</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/maven/conf</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-cslang-configuration</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/target/configuration</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/configuration</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-bin</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/target/bin</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/bin</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-security</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/target/security</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/security</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <configuration>
                            <target>
                                <unzip src="${project.basedir}/src/main/resources/dependency-base.zip"
                                       dest="${project.basedir}/target/maven/repo">
                                    <patternset>
                                        <exclude name="**/*.path"/>
                                    </patternset>
                                </unzip>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>zip assembly</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <zip destfile="${project.basedir}/target/${project.build.finalName}.zip">
                                    <fileset dir="${project.basedir}/target">
                                        <include name="bin/win64/*"/>
                                        <include name="configuration/*"/>
                                        <include name="maven/**"/>
                                        <include name="security/**"/>
                                        <include name="${project.build.finalName}.jar"/>
                                    </fileset>
                                </zip>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--Checkstyle verification during build-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <configLocation>${project.basedir}/google-checkstyle-rules.xml</configLocation>
                </configuration>
                <executions>
                    <execution>
                        <id>checkstyle-for-java-sources</id>
                        <phase>validate</phase>
                        <configuration>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>false</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            <maxAllowedViolations>0</maxAllowedViolations>
                            <logViolationsToConsole>true</logViolationsToConsole>
                            <violationSeverity>warning</violationSeverity>
                            <includeResources>false</includeResources>
                            <includeTestResources>false</includeTestResources>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>6.19</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!--<classifier>exec</classifier>-->
                    <requiresUnpack>
                        <dependency>
                            <groupId>org.python</groupId>
                            <artifactId>jython-standalone</artifactId>
                        </dependency>
                    </requiresUnpack>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>
